{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavbiriukov/Documents/GitHub/goit-react-hw-01-components/src/components/userCard/UserCard.jsx\";\nimport PropTypes from 'prop-types';\nimport { Card, Description, Avatar, UserName, UserInfo, StatsList, StatsItem, Label, Quantity } from './UserCard.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserCard = _ref => {\n  let {\n    username,\n    tag,\n    location,\n    avatar,\n    stats: {\n      followers,\n      views,\n      likes\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Description, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar,\n        alt: \"User avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserName, {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n        children: [\"@\", tag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatsList, {\n      children: [/*#__PURE__*/_jsxDEV(StatsItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quantity, {\n          children: followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Views\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quantity, {\n          children: views\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quantity, {\n          children: likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 1\n  }, this);\n};\n_c = UserCard;\nUserCard.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCard\");","map":{"version":3,"sources":["/Users/vladyslavbiriukov/Documents/GitHub/goit-react-hw-01-components/src/components/userCard/UserCard.jsx"],"names":["PropTypes","Card","Description","Avatar","UserName","UserInfo","StatsList","StatsItem","Label","Quantity","UserCard","username","tag","location","avatar","stats","followers","views","likes","propTypes","string","isRequired","exact","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,KARF,EASEC,QATF,QAUO,mBAVP;;AAYA,OAAO,MAAMC,QAAQ,GAAG,QAA6E;AAAA,MAA5E;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,MAA3B;AAAmCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB;AAA1C,GAA4E;AACjG,sBACJ,QAAC,IAAD;AAAA,4BACM,QAAC,WAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,MAAb;AAAqB,QAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA,kBAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAA,wBAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,QAAD;AAAA,kBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAQM,QAAC,SAAD;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAWG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YARN;AAAA;AAAA;AAAA;AAAA;AAAA,UADI;AAyBH,CA1BM;KAAMR,Q;AA4BbA,QAAQ,CAACS,SAAT,GAAqB;AACjBL,EAAAA,MAAM,EAAEd,SAAS,CAACoB,MAAV,CAAiBC,UADR;AAEjBV,EAAAA,QAAQ,EAAEX,SAAS,CAACoB,MAAV,CAAiBC,UAFV;AAGjBT,EAAAA,GAAG,EAAEZ,SAAS,CAACoB,MAAV,CAAiBC,UAHL;AAIjBR,EAAAA,QAAQ,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UAJV;AAKjBN,EAAAA,KAAK,EAAEf,SAAS,CAACsB,KAAV,CAAgB;AACfN,IAAAA,SAAS,EAAEhB,SAAS,CAACuB,MAAV,CAAiBF,UADb;AAEfJ,IAAAA,KAAK,EAAEjB,SAAS,CAACuB,MAAV,CAAiBF,UAFT;AAGfH,IAAAA,KAAK,EAAElB,SAAS,CAACuB,MAAV,CAAiBF;AAHT,GAAhB,EAIAA;AATU,CAArB","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Card,\n  Description,\n  Avatar,\n  UserName,\n  UserInfo,\n  StatsList,\n  StatsItem,\n  Label,\n  Quantity,\n} from './UserCard.styled';\n\nexport const UserCard = ({ username, tag, location, avatar, stats: { followers, views, likes } }) => {\n    return (\n<Card>\n      <Description>\n        <Avatar src={avatar} alt=\"User avatar\" />\n        <UserName>{username}</UserName>\n        <UserInfo>@{tag}</UserInfo>\n        <UserInfo>{location}</UserInfo>\n      </Description>\n\n      <StatsList>\n        <StatsItem>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </StatsItem>\n      </StatsList>\n    </Card>\n    );\n}\n\nUserCard.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.exact({\n            followers: PropTypes.number.isRequired,\n            views: PropTypes.number.isRequired,\n            likes: PropTypes.number.isRequired,\n        }).isRequired\n}"]},"metadata":{},"sourceType":"module"}