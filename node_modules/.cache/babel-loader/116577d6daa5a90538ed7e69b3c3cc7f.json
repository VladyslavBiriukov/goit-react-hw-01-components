{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavbiriukov/Documents/GitHub/goit-react-hw-01-components/src/components/userCard/UserCard.jsx\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserCard = _ref => {\n  let {\n    username,\n    tag,\n    location,\n    avatar,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar,\n        alt: username,\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tag\",\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"location\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quantity\",\n          children: stats.followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Views\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quantity\",\n          children: stats.views\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quantity\",\n          children: stats.likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = UserCard;\nUserCard.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCard\");","map":{"version":3,"sources":["/Users/vladyslavbiriukov/Documents/GitHub/goit-react-hw-01-components/src/components/userCard/UserCard.jsx"],"names":["PropTypes","UserCard","username","tag","location","avatar","stats","followers","views","likes","propTypes","string","isRequired","exact","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAgD;AAAA,MAA/C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,MAA3B;AAAmCC,IAAAA;AAAnC,GAA+C;AACpE,sBACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACF;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAED,MADP;AAEE,QAAA,GAAG,EAAEH,QAFP;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBA;AAArB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAG,QAAA,SAAS,EAAC,KAAb;AAAA,kBAAoBC;AAApB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAYF;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,8BACE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4BE,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4BD,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4BF,KAAK,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZE;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA6BH,CA9BM;KAAMR,Q;AAgCbA,QAAQ,CAACS,SAAT,GAAqB;AACjBL,EAAAA,MAAM,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADR;AAEjBV,EAAAA,QAAQ,EAAEF,SAAS,CAACW,MAAV,CAAiBC,UAFV;AAGjBT,EAAAA,GAAG,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UAHL;AAIjBR,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAJV;AAKjBN,EAAAA,KAAK,EAAEN,SAAS,CAACa,KAAV,CAAgB;AACfN,IAAAA,SAAS,EAAEP,SAAS,CAACc,MAAV,CAAiBF,UADb;AAEfJ,IAAAA,KAAK,EAAER,SAAS,CAACc,MAAV,CAAiBF,UAFT;AAGfH,IAAAA,KAAK,EAAET,SAAS,CAACc,MAAV,CAAiBF;AAHT,GAAhB,EAIAA;AATU,CAArB","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const UserCard = ({ username, tag, location, avatar, stats }) => {\n    return (\n    <div className=\"profile\">\n  <div className=\"description\">\n    <img\n      src={avatar}\n      alt={username}\n      className=\"avatar\"\n    />\n    <p className=\"name\">{username}</p>\n    <p className=\"tag\">{tag}</p>\n    <p className=\"location\">{location}</p>\n  </div>\n\n  <ul className=\"stats\">\n    <li>\n      <span className=\"label\">Followers</span>\n      <span className=\"quantity\">{stats.followers}</span>\n    </li>\n    <li>\n      <span className=\"label\">Views</span>\n      <span className=\"quantity\">{stats.views}</span>\n    </li>\n    <li>\n      <span className=\"label\">Likes</span>\n      <span className=\"quantity\">{stats.likes}</span>\n    </li>\n  </ul>\n        </div>\n    );\n}\n\nUserCard.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.exact({\n            followers: PropTypes.number.isRequired,\n            views: PropTypes.number.isRequired,\n            likes: PropTypes.number.isRequired,\n        }).isRequired\n}"]},"metadata":{},"sourceType":"module"}