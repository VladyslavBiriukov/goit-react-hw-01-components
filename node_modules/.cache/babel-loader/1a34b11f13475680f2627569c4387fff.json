{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavbiriukov/Documents/GitHub/goit-react-hw-01-components/src/components/statistics/Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction randomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport const StatisticsInfo = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"stat-list\",\n      children: stats.map(_ref2 => {\n        let {\n          id,\n          label,\n          percentage\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item\",\n          style: {\n            backgroundColor: randomHexColor()\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: [percentage, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = StatisticsInfo;\nStatisticsInfo.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  })).isRequired,\n  title: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticsInfo\");","map":{"version":3,"sources":["/Users/vladyslavbiriukov/Documents/GitHub/goit-react-hw-01-components/src/components/statistics/Statistics.jsx"],"names":["PropTypes","randomHexColor","Math","floor","random","toString","StatisticsInfo","title","stats","map","id","label","percentage","backgroundColor","propTypes","arrayOf","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,cAAT,GAA0B;AACxB,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACD;;AAED,OAAO,MAAMC,cAAc,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAChD,sBACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKC,KAAK,CAACC,GAAN,CAAU,SAA+B;AAAA,YAA9B;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA;AAAb,SAA8B;AACtC,4BACI;AACI,UAAA,SAAS,EAAC,MADd;AAGI,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEZ,cAAc;AAAjC,WAHX;AAAA,kCAKI;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,sBAAyBU;AAAzB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,uBAAyBC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA,WAESF,EAFT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXA;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CArBM;KAAMJ,c;AAuBbA,cAAc,CAACQ,SAAf,GAA2B;AACzBN,EAAAA,KAAK,EAAER,SAAS,CAACe,OAAV,CACLf,SAAS,CAACgB,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEV,SAAS,CAACiB,MAAV,CAAiBC,UADP;AAEdP,IAAAA,KAAK,EAAEX,SAAS,CAACiB,MAAV,CAAiBC,UAFV;AAGdN,IAAAA,UAAU,EAAEZ,SAAS,CAACmB,MAAV,CAAiBD;AAHf,GAAhB,CADK,EAMLA,UAPuB;AAQzBX,EAAAA,KAAK,EAAEP,SAAS,CAACiB;AARQ,CAA3B","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction randomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport const StatisticsInfo = ({ title, stats }) => {\n    return (\n        <section className=\"statistics\">\n            <h2 className=\"title\">{title}</h2>\n\n            <ul className=\"stat-list\">\n                {stats.map(({ id, label, percentage }) => {\n                    return (\n                        <li\n                            className=\"item\"\n                            key={id}\n                            style={{ backgroundColor: randomHexColor() }}\n                        >\n                            <span className=\"label\">{label}</span>\n                            <span className=\"label\">{percentage} %</span>\n                        </li>\n                    );\n                })}\n            </ul>\n        </section>\n    )\n};\n\nStatisticsInfo.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  title: PropTypes.string,\n};"]},"metadata":{},"sourceType":"module"}